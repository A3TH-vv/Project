import telebot

from telebot import types

from telebot.apihelper import send_message, send_photo

from posixpath import exists

from os import mkdir, listdir

from random import choice, randint,shuffle

from telebot.util import quick_markup

bot_token = '7979563241:'
bot = telebot.TeleBot(bot_token)

dict_stat = {
    'count_true' : 0,
    'count_false' : 0,
    'right_answer' : 0
}


def math_gen():
    global dict_stat

    num_1 = randint(0,10)
    action = choice('+-*/')

    num_2 = randint(1 if '/' else 0,10)

    math_task = f'{num_1} {action} {num_2}'
    dict_stat['right_answer'] = round(eval(math_task), 2)
    return math_task

def gen_keyb():

    global dict_stat
    keyb = types.InlineKeyboardMarkup(row_width=2)
    list_tasks = [math_gen() for i in range(4)]
    shuffle(list_tasks)

    for task in list_tasks:
        keyb.add(types.InlineKeyboardButton(task, callback_data= str(round(eval(task), 2))))

    return keyb

    dict_tasks = {}

    for i in range(4):
        task = math_gen()
        dict_tasks[task] = {'callback_data' : str(round(eval(task), 2))}

    key = choice(list(dict_tasks.keys()))
    dict_stat['right_answer'] = dict_tasks[key]['callback_data']

    return quick_markup(dict_tasks, row_width=2)




@bot.message_handler(commands=['start'])
def get_start(message):
    global dict_stat

    dict_stat['count_true'] = 0
    dict_stat['count_false'] = 0

    kb = gen_keyb()

    bot.send_message(message.chat.id,
                     f'Привіт {message.from_user.username} . Давай вирішувати мат приклади, ось це тобі для початку {dict_stat['right_answer']}',
                     reply_markup=kb)

@bot.message_handler(commands=['stop'])
def get_stop(message):
    global dict_stat

    if dict_stat['count_true'] > dict_stat['count_false']:
        bot.send_message(message.chat.id,
                         f'Твій результат перевершив мої очікування, кількість коректних: {dict_stat['count_true']} кількість не коректних {dict_stat['count_false']}')
        bot.send_sticker(message.chat.id,
                         'CAACAgIAAxkBAAPoZ-rKr_uysIdj3cnyxMShgEM5Mr4AAhUAA8A2TxPNVqY7YZ5k5zYE')
    elif dict_stat['count_true'] < dict_stat['count_false']:
        bot.send_message(message.chat.id,
                         f'Твій результат недотягує до середнього, кількість коректних: {dict_stat['count_true']} кількість не коректних {dict_stat['count_false']}')
        bot.send_sticker(message.chat.id,
                         'CAACAgIAAxkBAAPqZ-rKs3HbMeftAAHhC18zysRvm5wkAAIOAAPANk8TI1cURIdu1mU2BA')
    else:
        bot.send_message(message.chat.id,
                         f'Твій результат середній, кількість коректних: {dict_stat['count_true']} кількість не коректних {dict_stat['count_false']}')
        bot.send_sticker(message.chat.id,
                         'CAACAgIAAxkBAAPsZ-rKt_l0GwSB3B3N4g6FlRJ0fHIAAhgAA8A2TxPW-ie_nGoY-DYE')

@bot.message_handler(content_types='text')
def get_text(message):
    global dict_stat

    if float(message.text) == dict_stat['right_answer']:
        dict_stat['count_true'] += 1
        bot.send_message(message.chat.id,
                         f'Так тримати! {message.from_user.username} Ось тобі наступний приклад {math_gen()}')
    else:
        dict_stat['count_false'] += 1
        bot.send_message(message.chat.id,
                         f'Ой-ой-ой {message.from_user.username}, щось пішло не так... ось тобі наступний приклад {math_gen()}')


@bot.callback_query_handler(lambda a: True)
def get_query(query):
    global dict_stat

    if float(query.data) == float(dict_stat['right_answer']):
        dict_stat['count_true'] += 1
        bot.send_message(query.message.chat.id,
                         f'Супер {query.message.from_user.username}, так тримати.')
    else:
        dict_stat['count_false'] += 1
        bot.send_message(query.message.chat.id,
                         f'Ой-ой-ой {query.message.from_user.username}, щось пішло не так...')

    kb = gen_keyb()
    bot.send_message(query.message.chat.id,f'Ось тобі наступний приклад {dict_stat['right_answer']}',
                     reply_markup=kb)
bot.polling()
